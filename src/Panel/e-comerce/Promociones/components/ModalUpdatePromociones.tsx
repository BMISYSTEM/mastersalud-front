import React, { useEffect, useState } from 'react'
import usePromociones from '../usePromociones/usePromociones';
import { toast } from 'react-toastify';

// Generated by https://quicktype.io

export interface FindPromocion {
  succes: Succes;
}

export interface Succes {
  id:         number;
  activo:     number;
  nombre:     string;
  porcentaje: number;
  created_at: Date;
  updated_at: Date;
}



export const ModalUpdatePromociones = ({id}:{id:number}) => {
  const {mutate,findPromocion,updatePromociones} = usePromociones()
    const [nombre, setName] = useState("");
    const [porcentaje, setPorcentaje] = useState(0);
    const [respuesta,setRespuesta] = useState<FindPromocion>()
    const [loading,setLoading] = useState(true)


  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    const datos ={
      id:id,
      nombre:nombre,
      porcentaje:porcentaje,
      activo:1
    }
    await toast.promise(updatePromociones(datos),{
      error:'Se genero un error inesperado, consulte con soporte',
      pending:'Actualizando promocion',
      success:'La promocion se actualizo de manera correcta'
    });
    mutate()
  };
  useEffect(()=>{
    const cargarid = async() =>{
      setLoading(true)
      await findPromocion(id,setRespuesta)
      setLoading(false)
    }
    cargarid()
  },[])
  useEffect(()=>{
    if(respuesta){
      setLoading(true)
      setName(respuesta?.succes?.nombre ? respuesta?.succes?.nombre : '')
      setPorcentaje(respuesta?.succes?.porcentaje ? respuesta?.succes?.porcentaje : 0)
      setLoading(false)
    }
  },[respuesta])
  return (
    
    <form onSubmit={handleSubmit} className="space-y-4">
      <h2 className="text-2xl font-semibold">Actualizar Promocion</h2>
      {loading ? <p>Cargando informacion</p> :
      <>
        <div>
          <label className="block text-gray-700">Nombre:</label>
          <input
            type="text"
            value={nombre}
            onChange={(e) => setName(e.target.value)}
            required
            className="w-full px-3 py-2 border border-gray-300 rounded"
          />
        </div>
        <div>
          <label className="block text-gray-700">Porcentaje:</label>
          <input
            type="number"
            value={porcentaje}
            min={0}
            max={100}
            onChange={(e) => setPorcentaje(Number(e.target.value))}
            required
            className="w-full px-3 py-2 border border-gray-300 rounded"
          />
        </div>
      </>
      }
      
      <button
        type="submit"
        className="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-700"
      >
        Actualizar Promocion
      </button>
    </form>
  )
}
